global:
  revisionHistoryLimit: 5

controller:
  replicas: 1 # Additional replicas will cause sharding of managed clusters across number of replicas.
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
    service:
      annotations:
        prometheus.io/scrape: "true"
  env:
    - name: ARGOCD_K8S_CLIENT_QPS #required for Crossplane too many CRDs https://github.com/argoproj/argo-cd/pull/448
      value: '300'

repoServer:
  autoscaling:
    enabled: true
    minReplicas: 1
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 75
  metrics:
    enabled: true
    service:
      annotations:
        prometheus.io/scrape: "true"

applicationSet:
  replicaCount: 1 # The controller doesn't scale horizontally, is active-standby replicas
  metrics:
    enabled: true
    service:
      annotations:
        prometheus.io/scrape: "true"

server:
  autoscaling:
    enabled: true
    minReplicas: 1
    targetCPUUtilizationPercentage: 75
    targetMemoryUtilizationPercentage: 75
  metrics:
    enabled: true
    service:
      annotations:
        prometheus.io/scrape: "true"
  service:
    type: NodePort
  ingress:
    enabled: false
  extensions:
    enabled: true
    extensionList:
      - name: rollout-extension
        env:
          - name: EXTENSION_URL
            value: https://github.com/argoproj-labs/rollout-extension/releases/download/v0.3.4/extension.tar

configs:
  cm:
    application.resourceTrackingMethod: 'annotation' #use annotation for tracking required for Crossplane
    exec.enabled: true
    dexserver.disable.tls: 'true'
    server.insecure: 'true'
    admin.enabled: 'true'
    statusbadge.enabled: 'true'
  rbac:
    policy.default: 'role:readonly'
    policy.matchMode: 'glob'
    policy.csv: |
      p, role:admin, applications, *, *, allow
      p, role:admin, clusters, *, *, allow
      p, role:admin, repositories, *, *, allow
      p, role:admin, projects, *, *, allow
      p, role:admin, accounts, *, *, allow
      p, role:admin, exec, create, */*, allow
  params:
    server.insecure: "true"
    dexserver.disable.tls: "true"
    server.dex.server.strict.tls: "false"
  resource.exclusions: |
    - kinds:
      - ProviderConfigUsage
      apiGroups:
      - "*"

# -- Array of extra K8s manifests to deploy
## Note: Supports use of custom Helm templates
##       It gets handle in this form inside the argo-cd chart
# {{ range .Values.extraObjects }}
# ---
# {{ if typeIs "string" . }}
#     {{- tpl . $ }}
# {{- else }}
#     {{- tpl (toYaml .) $ }}
# {{- end }}
# {{ end }}
extraObjects:
  - apiVersion: argoproj.io/v1alpha1
    kind: AppProject
    metadata:
      name: default
      namespace: "{{ $.Release.Namespace }}"
      annotations:
        source: gitops-bridge
    spec:
      clusterResourceWhitelist:
        - group: '*'
          kind: '*'
      sourceRepos:
        - '*'
      destinations:
        - namespace: '*'
          name: '*'
          server: '*'
